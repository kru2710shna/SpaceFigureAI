import type { Image } from '../../Image.js';
import type { Point } from './points.js';
export interface RemoveClosePointsOptions {
    /**
     * The minimum distance between points in the returned filtered points. If the distance is less or equal to 0, no point is removed.
     * @default `0`
     */
    distance: number;
    /**
     * Shows what kind of extremum is being computed.
     * @default `'maximum'`
     */
    kind: 'minimum' | 'maximum';
    /**
     * Channel number of an image where the extremum should be found.
     * @default `0`
     */
    channel?: number;
}
/**
 * Finds extreme values of an image which are not stacked together.
 * @param points - Array of points that should be combined to improve.
 * @param image - Image which extrema are calculated from.
 * @param options - FilterPointsOptions
 * @returns Array of Points.
 */
export declare function removeClosePoints(points: Point[], image: Image, options: RemoveClosePointsOptions): Point[];
//# sourceMappingURL=removeClosePoints.d.ts.map