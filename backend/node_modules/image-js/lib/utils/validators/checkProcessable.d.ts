import type { BitDepth, Image } from '../../Image.js';
import type { Mask } from '../../Mask.js';
import type { ImageColorModel } from '../constants/colorModels.js';
interface CheckOptions {
    bitDepth?: BitDepth[] | BitDepth;
    alpha?: boolean[] | boolean;
    colorModel?: ImageColorModel[] | ImageColorModel;
    components?: number[] | number;
    channels?: number[] | number;
}
/**
 * This method checks if a process can be applied on the current image.
 * @param image - Image for which compatibility has to be checked.
 * @param options - Check processable options.
 */
export default function checkProcessable(image: Image | Mask, options?: CheckOptions): void;
type ArrayType = number[] | ImageColorModel[] | BitDepth[] | boolean[];
/**
 * Format array to a string.
 * @param array - Array to format.
 * @returns The formatted string.
 */
export declare function format(array: ArrayType): string;
export {};
//# sourceMappingURL=checkProcessable.d.ts.map