import type { Image } from '../../Image.js';
import type { Mask } from '../../Mask.js';
/**
 * Validate an array of channels.
 * @param channels - Array of channels.
 * @param image - The image being processed.
 */
export declare function validateChannels(channels: number[], image: Image): void;
/**
 * Validates that a channel index passed by the user is within range and is an integer.
 * @param channel - Channel index to validate.
 * @param image - The image being processed.
 */
export declare function validateChannel(channel: number, image: Image): void;
/**
 * Validates that array of svalues passed by the user are positive and within range.
 * @param values - Array of values to validate.
 * @param image - Image from which the values come.
 */
export declare function validateValues(values: number[], image: Image): void;
/**
 * Validates that a value passed by the user is positive and within range.
 * @param value - Value to validate.
 * @param image - Image from which the value comes.
 */
export declare function validateValue(value: number, image: Image): void;
/**
 * Validate that two images are compatible for comparison functions.
 * @param image - First image.
 * @param other - Second image.
 */
export declare function validateForComparison(image: Image | Mask, other: Image | Mask): void;
/**
 * Checks if the given color is valid.
 * @param color - Color to check.
 * @param image - Image.
 */
export declare function validateColor(color: number[], image: Image): void;
//# sourceMappingURL=validators.d.ts.map