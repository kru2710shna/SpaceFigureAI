import type { Image } from '../../Image.js';
import type { FastKeypoint, GetFastKeypointsOptions } from './getFastKeypoints.js';
export interface GetOrientedFastKeypointsOptions extends GetFastKeypointsOptions {
    /**
     * Diameter of the circle used for compotuation of the intensity centroid.
     * @default `7`
     */
    centroidPatchDiameter?: number;
}
export interface OrientedFastKeypoint extends FastKeypoint {
    /**
     * Orientation of the keypoint defined as the angle in degrees between the x axis , the keypoints origin and the center of mass of the keypoint.
     */
    angle: number;
}
/**
 * Find the oriented FAST features in a GREY image.
 * How to add orientation to FAST is described in: http://www.gwylab.com/download/ORB_2012.pdf
 * Basically, the intensity centroid of the window around the corner is computed and the
 * orientation is given by the vector from the center to the intensity centroid.
 * @param image - The image to process.
 * @param options - Get oriented FAST keypoints options.
 * @returns The oriented FAST keypoints.
 */
export declare function getOrientedFastKeypoints(image: Image, options?: GetOrientedFastKeypointsOptions): OrientedFastKeypoint[];
//# sourceMappingURL=getOrientedFastKeypoints.d.ts.map