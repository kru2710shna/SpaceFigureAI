import type { Point } from '../../geometry/index.js';
import type { FastKeypoint } from '../keypoints/getFastKeypoints.js';
import type { Match } from './bruteForceMatch.js';
export interface FilterEuclideanDistanceMatchesOptions {
    /**
     * The origin of the destination image relative to the top-left corner of the source image.
     * @default `{ column: 0, row: 0 }`
     */
    origin?: Point;
}
/**
 * Use this function to only keep the match from source to destination with
 * the smallest distance (score) for each destination keypoint.
 * @param matches - Matches from source to destination.
 * @param sourceKeypoints - Source keypoints.
 * @param destinationKeypoints - Destination keypoints.
 * @param options - Filter smallest distance matches options.
 * @returns Only the matches from source to destination with the smallest distance.
 */
export declare function filterEuclideanDistance(matches: Match[], sourceKeypoints: FastKeypoint[], destinationKeypoints: FastKeypoint[], options?: FilterEuclideanDistanceMatchesOptions): Match[];
//# sourceMappingURL=filterEuclideanDistance.d.ts.map