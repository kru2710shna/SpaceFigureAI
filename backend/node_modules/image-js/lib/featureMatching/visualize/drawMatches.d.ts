import type { Image } from '../../Image.js';
import type { GetColorsOptions } from '../featureMatching.types.js';
import type { FastKeypoint } from '../keypoints/getFastKeypoints.js';
import type { Match } from '../matching/bruteForceMatch.js';
import type { Montage } from './Montage.js';
export interface DrawMatchesOptions {
    /**
     * Circles diameter in pixels.
     * @default `10`
     */
    circleDiameter?: number;
    /**
     * Annotations color - An array of numerical values, one for each channel of the image. If less values are defined than there are channels in the image, the remaining channels will be set to 0.
     * @default `[255,0,0]`
     */
    strokeColor?: number[];
    /**
     * Whether the matches should be colored depending on the distance.
     * @default `false`
     */
    showDistance?: boolean;
    /**
     * Options for the coloring of the matches depending on their distance (useful if showDistance = true).
     */
    showDistanceOptions?: GetColorsOptions;
    /**
     * Maximal number of keypoints with best score to draw.
     * @default `matches.length`
     */
    maxNbMatches?: number;
}
/**
 * Draw the the matches between two images on their montage.
 * @param montage - The montage of two images to match.
 * @param matches - The matches between source and destination.
 * @param sourceKeypoints - Source keypoints.
 * @param destinationKeypoints - Destination keypoints.
 * @param options - Draw matches options.
 * @returns The comparison image.
 */
export declare function drawMatches(montage: Montage, matches: Match[], sourceKeypoints: FastKeypoint[], destinationKeypoints: FastKeypoint[], options?: DrawMatchesOptions): Image;
//# sourceMappingURL=drawMatches.d.ts.map