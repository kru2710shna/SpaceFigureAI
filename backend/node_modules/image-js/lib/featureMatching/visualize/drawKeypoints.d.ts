import type { Image } from '../../Image.js';
import type { Point } from '../../geometry/index.js';
import type { GetColorsOptions } from '../featureMatching.types.js';
import type { FastKeypoint } from '../keypoints/getFastKeypoints.js';
import type { OrientedFastKeypoint } from '../keypoints/getOrientedFastKeypoints.js';
export interface DrawKeypointsOptions {
    /**
     * Origin of the keypoints in the image.
     * @default `{row: 0, column: 0}`
     */
    origin?: Point;
    /**
     * Markers size in pixels.
     * @default `10`
     */
    markerSize?: number;
    /**
     * Keypoint's color - An array of numerical values, one for each channel of the image. If less values are defined than there are channels in the image, the remaining channels will be set to 0.
     * @default `[255,0,0]`
     */
    strokeColor?: number[];
    /**
     * Whether to fill the markers.
     * @default `false`
     */
    fill?: boolean;
    /**
     * Whether the score of the keypoints should be reflected in their color.
     * @default `false`
     */
    showScore?: boolean;
    /**
     * Maximal number of matches with smallest distance to draw.
     * @default `keypoints.length`
     */
    maxNbKeypoints?: number;
    /**
     * Image to which the resulting image has to be put.
     */
    out?: Image;
    /**
     * Options for the coloring of the keypoints depending on their score (useful if showScore = true).
     */
    showScoreOptions?: GetColorsOptions;
}
export interface DrawOrientedKeypointsOptions extends DrawKeypointsOptions {
    /**
     * Show the orientation of the keypoints.
     * @default `false`
     */
    showOrientation?: boolean;
}
export declare function drawKeypoints(image: Image, keypoints: FastKeypoint[], options?: DrawKeypointsOptions): Image;
export declare function drawKeypoints(image: Image, keypoints: OrientedFastKeypoint[], options?: DrawOrientedKeypointsOptions): Image;
//# sourceMappingURL=drawKeypoints.d.ts.map