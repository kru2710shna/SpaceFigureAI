import { Image } from '../Image.js';
import type { RoiMapManager } from './RoiMapManager.js';
import type { RoiKind } from './getRois.js';
export declare const RoisColorMode: {
    /**
     * Only two acceptable values: red or green.
     */
    readonly BINARY: "binary";
    /**
     * Palette of reds and blues.
     */
    readonly SATURATION: "saturation";
    /**
     * All possible hues (gradient of colors).
     */
    readonly RAINBOW: "rainbow";
};
export type RoisColorMode = (typeof RoisColorMode)[keyof typeof RoisColorMode];
export interface ColorRoisOptions {
    /**
     * Define the color mode to use to color the ROIs.
     * @default `'binary'`
     */
    mode?: RoisColorMode;
    /**
     * Specify which ROIs to color.
     * @default `'bw'`
     */
    roiKind?: RoiKind;
}
/**
 * Generate an image with all the ROIs of various colors.
 * @param roiMapManager - The ROI map manager.
 * @param options - Color ROIs options.
 * @returns The colored image.
 */
export declare function colorRois(roiMapManager: RoiMapManager, options?: ColorRoisOptions): Image;
//# sourceMappingURL=colorRois.d.ts.map