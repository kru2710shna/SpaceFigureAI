import type { Image } from '../Image.js';
import type { Point } from '../utils/geometry/points.js';
export interface DrawPolylineOnImageOptions {
    /**
     * Line color - An array of numerical values, one for each channel of the image. If less values are defined than there are channels in the image, the remaining channels will be set to 0.
     * @default A black pixel.
     */
    strokeColor?: number[];
    /**
     * Origin of the rectangle relative to a parent image (top-left corner).
     * @default `{row: 0, column: 0}`
     */
    origin?: Point;
    /**
     * Image to which the resulting image has to be put.
     */
    out?: Image;
}
/**
 * Draw a polyline defined by an array of points on an image.
 * @param image - Image to process.
 * @param points - Polyline array of points.
 * @param options - Draw polyline options.
 * @returns The image with the polyline drawing.
 */
export declare function drawPolylineOnImage(image: Image, points: Point[], options?: DrawPolylineOnImageOptions): Image;
//# sourceMappingURL=drawPolylineOnImage.d.ts.map