import type { Image } from '../Image.js';
import type { Point } from '../utils/geometry/points.js';
export interface DrawCircleOnImageOptions {
    /**
     * Circle border color - An array of numerical values, one for each channel of the image. If less values are defined than there are channels in the image, the remaining channels will be set to 0.
     * @default A black pixel.
     */
    strokeColor?: number[];
    /**
     * Circle fill color - An array of numerical values, one for each channel of the image. If less values are defined than there are channels in the image, the remaining channels will be set to 0.
     *
     */
    fillColor?: number[];
    /**
     * Image to which the resulting image has to be put.
     */
    out?: Image;
}
/**
 * Draw a circle defined by center and radius.
 * @param image - Image to process.
 * @param center - Circle center point.
 * @param radius - Circle radius.
 * @param options - Draw circle options.
 * @returns The original drawn image.
 */
export declare function drawCircleOnImage(image: Image, center: Point, radius: number, options?: DrawCircleOnImageOptions): Image;
//# sourceMappingURL=drawCircleOnImage.d.ts.map