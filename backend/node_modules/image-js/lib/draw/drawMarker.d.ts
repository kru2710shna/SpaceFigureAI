import type { Image } from '../Image.js';
import type { Point } from '../geometry/index.js';
export interface DrawMarkerOptions {
    /**
     * Marker size, Odd number greater than 1.
     * @default `1`
     */
    size?: number;
    /**
     * Marker shape.
     * @default `'cross'`
     */
    shape?: 'circle' | 'triangle' | 'cross' | 'square';
    /**
     * Circle border color - An array of numerical values, one for each channel of the image. If less values are defined than there are channels in the image, the remaining channels will be set to 0.
     */
    fillColor?: number[];
    /**
     * Circle border color - An array of numerical values, one for each channel of the image. If less values are defined than there are channels in the image, the remaining channels will be set to 0.
     * @default A black pixel.
     */
    strokeColor?: number[];
    /**
     * Image to which the resulting image has to be put.
     */
    out?: Image;
}
/**
 * Draw a marker on the image.
 * @param image - Image to process.
 * @param point - Marker center point.
 * @param options - Draw marker options.
 * @returns The image with the marker drawing.
 */
export declare function drawMarker(image: Image, point: Point, options: DrawMarkerOptions): Image;
//# sourceMappingURL=drawMarker.d.ts.map