import type { Image } from '../Image.js';
import type { Point } from '../utils/geometry/points.js';
import type { DrawPolylineOnImageOptions } from './drawPolylineOnImage.js';
export interface DrawPolygonOnImageOptions extends DrawPolylineOnImageOptions {
    /**
     * Fill color - An array of numerical values, one for each channel of the image. If less values are defined than there are channels in the image, the remaining channels will be set to 0.
     * @default A black pixel.
     */
    fillColor?: number[];
    /**
     * Origin of the rectangle relative to a parent image (top-left corner).
     * @default `{row: 0, column: 0}`
     */
    origin?: Point;
}
/**
 * Draw a polygon defined by an array of points onto an image.
 * @param image - Image to process.
 * @param points - Polygon vertices.
 * @param options - Draw Line options.
 * @returns The image with the polygon drawing.
 */
export declare function drawPolygonOnImage(image: Image, points: Point[], options?: DrawPolygonOnImageOptions): Image;
//# sourceMappingURL=drawPolygonOnImage.d.ts.map