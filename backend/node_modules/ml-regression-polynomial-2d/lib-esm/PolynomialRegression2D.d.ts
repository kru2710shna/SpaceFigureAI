import { DataXY, PointXY, type NumberArray } from 'cheminfo-types';
import { Matrix } from 'ml-matrix';
import { BaseRegression2D } from './BaseRegression2D';
export interface PolynomialRegression2DOptions {
    /**
     *degree of the polynomial regression.
     * @default 2
     */
    order?: number;
}
interface Score {
    r: number;
    r2: number;
    chi2: number;
    rmsd: number;
}
export declare class PolynomialRegression2D extends BaseRegression2D {
    order: number;
    coefficients: Matrix;
    score: Score;
    /**
     * Constructor for the 2D polynomial fitting
     *
     * @param inputs - independent or explanatory variable
     * @param outputs - dependent or response variable`
     * @constructor
     */
    constructor(inputs: DataXY, outputs: NumberArray, options?: PolynomialRegression2DOptions);
    _predict(newInputs: PointXY): number;
    toString(precision: number): string;
    toLaTeX(precision: number): string;
    _toFormula(precision: number, isLaTeX: boolean): string;
    toJSON(): {
        name: string;
        order: number;
        score: Score;
        coefficients: Matrix;
    };
    static load(json: ReturnType<PolynomialRegression2D['toJSON']>): PolynomialRegression2D;
}
export {};
//# sourceMappingURL=PolynomialRegression2D.d.ts.map